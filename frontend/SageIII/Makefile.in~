# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic 
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?

# Non-recursive Makefile


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON =  \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs \
	$(srcdir)/sage_support/Makefile_variables \
	$(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/config/mkinstalldirs $(srcdir)/sage.docs.in \
	preproc-c.cc omplexer.cc ompparser.hh ompparser.cc \
	$(top_srcdir)/config/ylwrap $(include_HEADERS) README

# DQ (3/13/2010): sage_support.cpp requires the OFP fortran source files to be made available.
# if ROSE_USE_OPEN_FORTRAN_PARSER
@ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE@am__append_1 = -I${top_builddir}/src/3rdPartyLibraries/fortran-parser

# DQ (6/25/2011): Readded this directory so that we can support the older behavior as a default
# although this will likely fail at least some of the nearly one hundred new name qualification tests.
# DQ (6/24/2011): Removed now the the name qualification support in a part of src/backend/unparser.
# astHiddenTypeAndDeclarationLists/libastHiddenTypeAndDeclarationLists.la 
@ROSE_USE_SMALLER_GENERATED_FILES_TRUE@am__append_2 = GENERATED_CODE_DIRECTORY_Cxx_Grammar/libgeneratedIR.la
subdir = src/frontend/SageIII
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/acmacros/upc.m4 \
	$(top_srcdir)/config/EDG.m4 $(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/acinclude.m4 $(top_srcdir)/config/argz.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_lib_xerces.m4 \
	$(top_srcdir)/config/ax_python_devel.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determine-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libtool.m4 $(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/ltdl.m4 $(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 \
	$(top_srcdir)/config/mdl_have_opengl.m4 \
	$(top_srcdir)/config/minitermite.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-backstroke.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-clang.m4 \
	$(top_srcdir)/config/support-compass2.m4 \
	$(top_srcdir)/config/support-cuda-opencl.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-git-versioning.m4 \
	$(top_srcdir)/config/support-gmp.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-i386.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-isl.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-languages.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-mint.m4 \
	$(top_srcdir)/config/support-mpi.m4 \
	$(top_srcdir)/config/support-ofp.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-projects.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-rtedupc.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-swipl.m4 \
	$(top_srcdir)/config/support-upr.m4 \
	$(top_srcdir)/config/support-vectorization.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/support_POET.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES = sage.docs
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
@ROSE_USE_BOOST_WAVE_FALSE@libsage3_la_DEPENDENCIES =  \
@ROSE_USE_BOOST_WAVE_FALSE@	astFixup/libastFixup.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astPostProcessing/libastPostProcessing.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astMerge/libastMerge.la \
@ROSE_USE_BOOST_WAVE_FALSE@	sageInterface/libsageInterface.la \
@ROSE_USE_BOOST_WAVE_FALSE@	virtualCFG/libvirtualCFG.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astVisualization/libastVisualization.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astFromString/libAstFromString.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astHiddenTypeAndDeclarationLists/libastHiddenTypeAndDeclarationLists.la \
@ROSE_USE_BOOST_WAVE_FALSE@	includeDirectivesProcessing/libincludeDirectivesProcessing.la \
@ROSE_USE_BOOST_WAVE_FALSE@	$(am__append_2)
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@libsage3_la_DEPENDENCIES = astFixup/libastFixup.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astPostProcessing/libastPostProcessing.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astMerge/libastMerge.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	sageInterface/libsageInterface.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astTokenStream/libastTokenStream.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	virtualCFG/libvirtualCFG.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astVisualization/libastVisualization.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astFromString/libAstFromString.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astHiddenTypeAndDeclarationLists/libastHiddenTypeAndDeclarationLists.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	includeDirectivesProcessing/libincludeDirectivesProcessing.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	$(am__append_2)
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@libsage3_la_DEPENDENCIES = astFixup/libastFixup.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	astPostProcessing/libastPostProcessing.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	sageInterface/libsageInterface.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	astVisualization/libastVisualization.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	virtualCFG/libvirtualCFG.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	includeDirectivesProcessing/libincludeDirectivesProcessing.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	$(am__append_2)
am__libsage3_la_SOURCES_DIST = rose_attributes_list.C \
	attachPreprocessingInfo.C attachPreprocessingInfoTraversal.C \
	attributeListMap.C manglingSupport.C fixupCopy_scopes.C \
	fixupCopy_symbols.C fixupCopy_references.C rtiHelpers.C \
	OmpAttribute.C ompFortranParser.C ompAstConstruction.cpp \
	dwarfSupport.C rose_graph_support.C \
	$(fSageSupportPath)/sage_support.cpp \
	$(fSageSupportPath)/cmdline.cpp preproc-c.ll omplexer.ll \
	ompparser.yy
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = $(fSageSupportPath)/sage_support.lo \
	$(fSageSupportPath)/cmdline.lo
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@am__objects_2 = rose_attributes_list.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	attachPreprocessingInfo.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	attachPreprocessingInfoTraversal.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	attributeListMap.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	manglingSupport.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	fixupCopy_scopes.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	fixupCopy_symbols.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	fixupCopy_references.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	rtiHelpers.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	OmpAttribute.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	ompFortranParser.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	ompAstConstruction.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	dwarfSupport.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	rose_graph_support.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	$(am__objects_1)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@am__objects_2 = rose_attributes_list.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	attachPreprocessingInfo.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	attachPreprocessingInfoTraversal.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	attributeListMap.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	manglingSupport.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	fixupCopy_scopes.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	fixupCopy_symbols.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	fixupCopy_references.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	rose_graph_support.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	$(am__objects_1)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@am_libsage3_la_OBJECTS = $(am__objects_2) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	preproc-c.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	omplexer.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	ompparser.lo
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@am_libsage3_la_OBJECTS =  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	$(am__objects_2) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	preproc-c.lo
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@am__objects_3 =  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_Grammar.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarRTI.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarMemoryPoolSupport.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarReturnClassHierarchySubTree.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarTreeTraversalSuccessorContainer.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarVariantEnumNames.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarNewAndDeleteOperators.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarCopyMemberFunctions.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarTraverseMemoryPool.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarCheckingIfDataMembersAreInMemoryPool.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	AST_FILE_IO.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	StorageClasses.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarReturnDataMemberPointers.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarProcessDataMemberReferenceToPointers.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarNewConstructors.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarGetChildIndex.lo
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@am__objects_3 =  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_Grammar.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarMemoryPoolSupport.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarReturnClassHierarchySubTree.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarTreeTraversalSuccessorContainer.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarVariantEnumNames.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarNewAndDeleteOperators.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarCopyMemberFunctions.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarTraverseMemoryPool.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarCheckingIfDataMembersAreInMemoryPool.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarReturnDataMemberPointers.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarProcessDataMemberReferenceToPointers.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarNewConstructors.lo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarGetChildIndex.lo
nodist_libsage3_la_OBJECTS = $(am__objects_3)
libsage3_la_OBJECTS = $(am_libsage3_la_OBJECTS) \
	$(nodist_libsage3_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
AM_V_LEX = $(am__v_LEX_@AM_V@)
am__v_LEX_ = $(am__v_LEX_@AM_DEFAULT_V@)
am__v_LEX_0 = @echo "  LEX     " $@;
am__v_LEX_1 = 
YLWRAP = $(top_srcdir)/config/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
AM_V_YACC = $(am__v_YACC_@AM_V@)
am__v_YACC_ = $(am__v_YACC_@AM_DEFAULT_V@)
am__v_YACC_0 = @echo "  YACC    " $@;
am__v_YACC_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libsage3_la_SOURCES) $(nodist_libsage3_la_SOURCES)
DIST_SOURCES = $(am__libsage3_la_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"
HEADERS = $(include_HEADERS) $(nodist_include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = astFileIO astMerge astFixup astPostProcessing \
	sageInterface virtualCFG astTokenStream \
	astHiddenTypeAndDeclarationLists astVisualization \
	astFromString includeDirectivesProcessing \
	GENERATED_CODE_DIRECTORY_Cxx_Grammar
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ABS_COMPASS2_XML_SRCDIR = @ABS_COMPASS2_XML_SRCDIR@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ARGZ_H = @ARGZ_H@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_LINKER = @AUX_LINKER@
AWK = @AWK@
Axx_INCLUDES = @Axx_INCLUDES@
Axx_LIBS = @Axx_LIBS@
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = @BACKEND_COMPILER_VERSION_MAJOR_NUMBER@
BACKEND_COMPILER_VERSION_MINOR_NUMBER = @BACKEND_COMPILER_VERSION_MINOR_NUMBER@
BACKEND_COMPILER_VERSION_NAME = @BACKEND_COMPILER_VERSION_NAME@
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = @BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER@
BACKEND_CXX_COMPILER = @BACKEND_CXX_COMPILER@
BACKEND_C_COMPILER = @BACKEND_C_COMPILER@
BACKEND_FORTRAN_COMPILER = @BACKEND_FORTRAN_COMPILER@
BACKEND_JAVA_COMPILER = @BACKEND_JAVA_COMPILER@
BACKSTROKE_ROSS_INCLUDE = @BACKSTROKE_ROSS_INCLUDE@
BACKSTROKE_SPEEDES_INCLUDE = @BACKSTROKE_SPEEDES_INCLUDE@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_WAVE_LIB = @BOOST_WAVE_LIB@
CANDL_PATH = @CANDL_PATH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CFLAGS32 = @CFLAGS32@
CLANG_CXXFLAGS = @CLANG_CXXFLAGS@
CLANG_LDFLAGS = @CLANG_LDFLAGS@
CLANG_LIBDIR = @CLANG_LIBDIR@
CLASSPATH = @CLASSPATH@
CLOOG_PATH = @CLOOG_PATH@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CUDA_INC_DIR = @CUDA_INC_DIR@
CUDA_LIB_DIR = @CUDA_LIB_DIR@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
# avoid unused Flex functions which are automatically generated
#CXXFLAGS+= -DYY_NO_TOP_STATE -DYY_NO_POP_STATE $(ROSE_OPTIMIZATION_LEVEL)
CXXFLAGS = @CXXFLAGS@ $(ROSE_OPTIMIZATION_LEVEL) $(ROSE_VERBOSE)
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_OPTIMIZE = @CXX_OPTIMIZE@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATE_OBJECTS = @CXX_TEMPLATE_OBJECTS@
CXX_TEMPLATE_REPOSITORY_PATH = .
CXX_WARNINGS = @CXX_WARNINGS@
CYGPATH_W = @CYGPATH_W@
C_DEBUG = @C_DEBUG@
C_OPTIMIZE = @C_OPTIMIZE@
C_WARNINGS = @C_WARNINGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN_ADDED_DIRECTORY_1 = @DOXYGEN_ADDED_DIRECTORY_1@
DOXYGEN_ADDED_DIRECTORY_2 = @DOXYGEN_ADDED_DIRECTORY_2@
DOXYGEN_ENABLED_SECTIONS = @DOXYGEN_ENABLED_SECTIONS@
DOXYGEN_EXTRACT_ALL = @DOXYGEN_EXTRACT_ALL@
DOXYGEN_EXTRACT_PRIVATE = @DOXYGEN_EXTRACT_PRIVATE@
DOXYGEN_EXTRACT_STATIC = @DOXYGEN_EXTRACT_STATIC@
DOXYGEN_HIDE_FRIEND_COMPOUNDS = @DOXYGEN_HIDE_FRIEND_COMPOUNDS@
DOXYGEN_HIDE_UNDOC_CLASSES = @DOXYGEN_HIDE_UNDOC_CLASSES@
DOXYGEN_HIDE_UNDOC_MEMBERS = @DOXYGEN_HIDE_UNDOC_MEMBERS@
DOXYGEN_INTERNAL_DOCS = @DOXYGEN_INTERNAL_DOCS@
DOXYGEN_USE_TAG_FILE = @DOXYGEN_USE_TAG_FILE@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DWARF_INCLUDE = @DWARF_INCLUDE@
DWARF_LINK = @DWARF_LINK@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ETHER_PREFIX = @ETHER_PREFIX@
EXE = @EXE@
EXEEXT = @EXEEXT@
F77 = @F77@
FC = @FC@
FCFLAGS = @FCFLAGS@
FFLAGS = @FFLAGS@
FGREP = @FGREP@
FLTK_include_path = @FLTK_include_path@
FLTK_libs_path = @FLTK_libs_path@
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = @GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX@
GEN_BE = @GEN_BE@
GFORTRAN_PATH = @GFORTRAN_PATH@
GHCBIN = @GHCBIN@
GLUT_include_path = @GLUT_include_path@
GLUT_libs_path = @GLUT_libs_path@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GMP_INCLUDE_PATH = @GMP_INCLUDE_PATH@
GMP_INSTALL_PATH = @GMP_INSTALL_PATH@
GMP_LIBRARY_PATH = @GMP_LIBRARY_PATH@
GREP = @GREP@
GraphViz_include_path = @GraphViz_include_path@
GraphViz_libs_path = @GraphViz_libs_path@
HS_CONFIG_OPTS = @HS_CONFIG_OPTS@
INCLTDL = @INCLTDL@
INCLUDE_COMPASS_MAKEFILE_INC = @INCLUDE_COMPASS_MAKEFILE_INC@
INDENT = @INDENT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE_OPTIONS = @INSURE_OPTIONS@
ISL_INCLUDE_PATH = @ISL_INCLUDE_PATH@
ISL_INSTALL_PATH = @ISL_INSTALL_PATH@
ISL_LIBRARY_PATH = @ISL_LIBRARY_PATH@
IntelPin_path = @IntelPin_path@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JAVA_JVM_INCLUDE = @JAVA_JVM_INCLUDE@
JAVA_JVM_LINK = @JAVA_JVM_LINK@
JAVA_PATH = @JAVA_PATH@
LD = @LD@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADD_DL = @LIBADD_DL@
LIBADD_DLD_LINK = @LIBADD_DLD_LINK@
LIBADD_DLOPEN = @LIBADD_DLOPEN@
LIBADD_SHL_LOAD = @LIBADD_SHL_LOAD@
LIBFFI_CFLAGS = @LIBFFI_CFLAGS@
LIBFFI_LIBS = @LIBFFI_LIBS@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBS_WITH_RPATH = @LIBS_WITH_RPATH@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM_CONFIG = @LLVM_CONFIG@
LN_S = @LN_S@
LTDLDEPS = @LTDLDEPS@
LTDLINCL = @LTDLINCL@
LTDLOPEN = @LTDLOPEN@
LTLIBOBJS = @LTLIBOBJS@
LT_CONFIG_H = @LT_CONFIG_H@
LT_DLLOADERS = @LT_DLLOADERS@
LT_DLPREOPEN = @LT_DLPREOPEN@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPLE_INCLUDES = @MAPLE_INCLUDES@
MAPLE_LIBS = @MAPLE_LIBS@
MD5 = @MD5@
MINT = @MINT@
MKDIR_P = @MKDIR_P@
MOC = @MOC@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPIFC = @MPIFC@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_INCLUDE = @MYSQL_INCLUDE@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
MYSQL_VERSION = @MYSQL_VERSION@
NM = @NM@
NMEDIT = @NMEDIT@
OBJ = @OBJ@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OPENCL_INC_DIR = @OPENCL_INC_DIR@
OPENCL_LIB_DIR = @OPENCL_LIB_DIR@
OPEN_FORTRAN_PARSER_PATH = @OPEN_FORTRAN_PARSER_PATH@
OPTIONAL_PROJECTS = @OPTIONAL_PROJECTS@
OS_release = @OS_release@
OS_vendor = @OS_vendor@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_VERSION_NUMERIC = @PACKAGE_VERSION_NUMERIC@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PL_CFLAGS = @PL_CFLAGS@
PL_LIBS = @PL_LIBS@
POET_INCL = @POET_INCL@
POET_LIB = @POET_LIB@
PPL_PATH = @PPL_PATH@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
PYTHON = @PYTHON@
PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
PYTHON_LDFLAGS = @PYTHON_LDFLAGS@
PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
Pxx_INCLUDES = @Pxx_INCLUDES@
Pxx_LIBS = @Pxx_LIBS@
QROSE_PREFIX = @QROSE_PREFIX@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
QT_VERSION = @QT_VERSION@
QT_VERSION_MAJOR = @QT_VERSION_MAJOR@
QT_VERSION_MINOR = @QT_VERSION_MINOR@
RANLIB = @RANLIB@
RCC = @RCC@
ROSEHPCT_DEP_INCLUDES = @ROSEHPCT_DEP_INCLUDES@
ROSEHPCT_DEP_LIBS = @ROSEHPCT_DEP_LIBS@
ROSE_BOOST_NORMAL_INCLUDE_PATH = @ROSE_BOOST_NORMAL_INCLUDE_PATH@

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use). 
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = @ROSE_BOOST_PREINCLUDE_PATH@
ROSE_EDG_MAJOR_VERSION_NUMBER = @ROSE_EDG_MAJOR_VERSION_NUMBER@
ROSE_EDG_MINOR_VERSION_NUMBER = @ROSE_EDG_MINOR_VERSION_NUMBER@
ROSE_HOME = @ROSE_HOME@
ROSE_LSB_RELEASE = @ROSE_LSB_RELEASE@
ROSE_OBJDUMP_PATH = @ROSE_OBJDUMP_PATH@
ROSE_OFP_JAR_FILE = @ROSE_OFP_JAR_FILE@
ROSE_OFP_MAJOR_VERSION_NUMBER = @ROSE_OFP_MAJOR_VERSION_NUMBER@
ROSE_OFP_MINOR_VERSION_NUMBER = @ROSE_OFP_MINOR_VERSION_NUMBER@
ROSE_OFP_PATCH_VERSION_NUMBER = @ROSE_OFP_PATCH_VERSION_NUMBER@
ROSE_OFP_VERSION_NUMBER = @ROSE_OFP_VERSION_NUMBER@
ROSE_PS2PDF_PATH = @ROSE_PS2PDF_PATH@
ROSE_SUPPORT_GNU_EXTENSIONS = @ROSE_SUPPORT_GNU_EXTENSIONS@
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = @ROSE_SUPPORT_MICROSOFT_EXTENSIONS@
ROSE_USE_CANDL = @ROSE_USE_CANDL@
ROSE_USE_CLOOG = @ROSE_USE_CLOOG@
ROSE_USE_CUDA_SUPPORT = @ROSE_USE_CUDA_SUPPORT@
ROSE_USE_OPENCL_SUPPORT = @ROSE_USE_OPENCL_SUPPORT@
ROSE_USE_PPL = @ROSE_USE_PPL@
ROSE_USE_SCOPLIB = @ROSE_USE_SCOPLIB@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT@
ROSE_WGET_PATH = @ROSE_WGET_PATH@
ROSE_WITH_MPI_CFLAGS = @ROSE_WITH_MPI_CFLAGS@
ROSE_WITH_MPI_CLDFLAGS = @ROSE_WITH_MPI_CLDFLAGS@
ROSE_WITH_MPI_CXXFLAGS = @ROSE_WITH_MPI_CXXFLAGS@
ROSE_WITH_MPI_CXXLDFLAGS = @ROSE_WITH_MPI_CXXLDFLAGS@
ROSE_WITH_MPI_F77FLAGS = @ROSE_WITH_MPI_F77FLAGS@
ROSE_WITH_MPI_F77LDFLAGS = @ROSE_WITH_MPI_F77LDFLAGS@
ROSE_WITH_MPI_FFLAGS = @ROSE_WITH_MPI_FFLAGS@
ROSE_WITH_MPI_FLDFLAGS = @ROSE_WITH_MPI_FLDFLAGS@
ROSE_YICES = @ROSE_YICES@
ROSE_YICES_PREFIX = @ROSE_YICES_PREFIX@
RT_LIBS = @RT_LIBS@
SCOPLIB_PATH = @SCOPLIB_PATH@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LDFLAGS = @SQLITE3_LDFLAGS@
SQLITE3_VERSION = @SQLITE3_VERSION@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
SWIPL = @SWIPL@
SWIPL_CFLAGS = @SWIPL_CFLAGS@
SWIPL_LIBS = @SWIPL_LIBS@
SWIPL_PREFIX = @SWIPL_PREFIX@
SWIPL_VERSION = @SWIPL_VERSION@
SWI_PL = @SWI_PL@
SWI_PLC = @SWI_PLC@
SWI_PROLOG_HOME_DIR = @SWI_PROLOG_HOME_DIR@
SWI_PROLOG_INCLUDE_DIR = @SWI_PROLOG_INCLUDE_DIR@
SWI_PROLOG_LDADD = @SWI_PROLOG_LDADD@
SWI_PROLOG_LIBS = @SWI_PROLOG_LIBS@
TCLSH = @TCLSH@
TEST_SMT_SOLVER = @TEST_SMT_SOLVER@
UIC = @UIC@
UPC = @UPC@
UPCDEPMODE = @UPCDEPMODE@
UPCFLAGS = @UPCFLAGS@
USING_WINDOWS = @USING_WINDOWS@
VALGRIND_BINARY = @VALGRIND_BINARY@
VECTORIZATION = @VECTORIZATION@
VERSION = @VERSION@
XERCES_CPPFLAGS = @XERCES_CPPFLAGS@
XERCES_LDFLAGS = @XERCES_LDFLAGS@
XERCES_LIBS = @XERCES_LIBS@
XERCES_VERSION = @XERCES_VERSION@
XMKMF = @XMKMF@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
YACC = @YACC@
YFLAGS = @YFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
absolute_path_srcdir = @absolute_path_srcdir@
ac_boost_path = @ac_boost_path@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_F77 = @ac_ct_F77@
ac_ct_FC = @ac_ct_FC@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_UPC = @ac_ct_UPC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
backstroke_ross_path = @backstroke_ross_path@
backstroke_speedes_path = @backstroke_speedes_path@
bddbddb_path = @bddbddb_path@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_triplet_without_redhat = @build_triplet_without_redhat@
build_vendor = @build_vendor@
builddir = @builddir@
configure_date = @configure_date@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
dwarf_path = @dwarf_path@
edg_union_struct_debugging_value = @edg_union_struct_debugging_value@
exec_prefix = @exec_prefix@
glut_path = @glut_path@
gomp_omp_runtime_library_path = @gomp_omp_runtime_library_path@
have_swi_prolog = @have_swi_prolog@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
ida_path = @ida_path@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
insure_BIN = @insure_BIN@
insure_LIBS = @insure_LIBS@
insure_PREFIX = @insure_PREFIX@
libdir = @libdir@
libexecdir = @libexecdir@
llvm_path = @llvm_path@
localedir = @localedir@
localstatedir = @localstatedir@
ltdl_LIBOBJS = @ltdl_LIBOBJS@
ltdl_LTLIBOBJS = @ltdl_LTLIBOBJS@
mandir = @mandir@
maple_path = @maple_path@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
omni_omp_runtime_support_path = @omni_omp_runtime_support_path@
optional_Visualization_subdirs = @optional_Visualization_subdirs@
parallel_ast_traversal_omp_path = @parallel_ast_traversal_omp_path@
pdfdir = @pdfdir@
php_path = @php_path@
poet_dir = @poet_dir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
purify_BIN = @purify_BIN@
purify_INCLUDES = @purify_INCLUDES@
purify_LIBS = @purify_LIBS@
purify_PREFIX = @purify_PREFIX@
rted_path = @rted_path@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sys_symbol_underscore = @sys_symbol_underscore@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_pwd = @top_pwd@
top_srcdir = @top_srcdir@
wine_path = @wine_path@

# SQLite is a simpler database to use than MySQL
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library 
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
@ROSE_USE_QT_TRUE@ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
@ROSE_USE_QT_TRUE@ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
@ROSE_USE_QT_TRUE@ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
@ROSE_USE_QT_TRUE@ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS = -lrosehpct
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_INCLUDES = -I@ROSE_YICES_PREFIX@/include
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS = -lyices
@ROSE_HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS_WITH_PATH = @ROSE_YICES_PREFIX@/lib/libyices.a
GLUT_LIBS = ${glut_path}

# ROSE-DWARF libdwarf support
@ROSE_USE_DWARF_TRUE@ROSE_DWARF_INCLUDES = -I$(dwarf_path)
# DQ (3/15/2009): Use the usual static linking when not using Intel Pin (what we used to do).
# DQ (3/13/2009): Fixup libdwarf support in ROSE to always use the dynamic (shared) library.
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(dwarf_path) -L$(dwarf_path) -ldwarf -lelf
# DQ (6/5/2010): Fixed to use the value set in the configure step (requires the dynamic library).
# ROSE_DWARF_LIBS_WITH_PATH = $(dwarf_path)/libdwarf.a -lelf
@ROSE_USE_DWARF_TRUE@@ROSE_USE_INTEL_PIN_FALSE@ROSE_DWARF_LIBS_WITH_PATH = @DWARF_LINK@

# DQ (3/13/2009): These do not appear to be used anywhere.
# ROSE_DWARF_LIBS = -ldwarf
# ROSE_DWARF_LIB_FILE = libdwarf.a

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for 
# dwarf when used with Intel Pin.
# ROSE_DWARF_LIBS_WITH_PATH = $(INTEL_PIN_PATH)/intel64/lib-ext/libdwarf.a -lelf
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(INTEL_PIN_PATH)/intel64/lib-ext -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
@ROSE_USE_DWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
@ROSE_USE_DWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
@ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE@ROSE_WINE_INCLUDES = -I$(wine_path)/include
@ROSE_USE_PHP_TRUE@ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
@ROSE_USE_LLVM_TRUE@	-lLLVMInstrumentation -lLLVMJIT \
@ROSE_USE_LLVM_TRUE@	-lLLVMExecutionEngine -lLLVMCppBackend \
@ROSE_USE_LLVM_TRUE@	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMCBackend -lLLVMCBackendInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinInfo -lLLVMBitWriter \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Disassembler -lLLVMX86AsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Info -lLLVMAsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmParser -lLLVMMCParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMInfo -lLLVMArchive \
@ROSE_USE_LLVM_TRUE@	-lLLVMBitReader -lLLVMAlphaCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMAsmPrinter -lLLVMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMScalarOpts -lLLVMInstCombine \
@ROSE_USE_LLVM_TRUE@	-lLLVMTransformUtils -lLLVMipa \
@ROSE_USE_LLVM_TRUE@	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
@ROSE_USE_LLVM_TRUE@	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystem

# adding all libraries for now

# SSL support permits use of MD5 checksums internally for binary library identification.
@ROSE_USE_SSL_SUPPORT_TRUE@ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
@ROSE_PCH_TRUE@ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_PATH = @IntelPin_path@
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_USE_DWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
@USING_INTEL_COMPILER_TRUE@ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@ROSE_INCLUDES = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_BOOST_PREINCLUDE_PATH) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/astFromString \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PHPFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/CxxFrontend/ClangFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/PythonFrontend \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/frontend/CxxFrontend/Clang \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractHandle \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/abstractMemoryObject \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astRewriteMechanism \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/annotation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/binaryAnalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/binaryAnalyses/dataflowanalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/binaryAnalyses/instructionSemantics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/extractFunctionArgumentsNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticSingleAssignment \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/ssaUnfilteredCfg \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/systemDependenceGraph \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/bitvectorDataflow \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/VirtualFunctionAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/graphAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SIDEEFFECTS_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_GUI_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_QT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(ROSE_SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@			$(ROSE_SIDEEFFECT_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@      $(SQLITE_DATABASE_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/src/midend/astUtil/astInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     -I$(top_srcdir)/libltdl \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PHP_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PYTHON_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_YICES_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_DWARF_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_WINE_INCLUDES) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(VALGRIND_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(SQLITE3_CFLAGS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) -DBOOST_REGEX_MATCH_EXTRA \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_PCH_INCLUDE) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(INTEL_PIN_INCLUDE_PATHS) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@     $(ROSE_ETHER_INCLUDE)


# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the 
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@ROSE_INCLUDES = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_BOOST_PREINCLUDE_PATH) \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_builddir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/SageIII/sage_support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryFormats \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/BinaryLoader \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/frontend/Disassemblers \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/formatSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/JavaCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/unparser/PythonCodeGeneration \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/backend/asmUnparser \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/support \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs  \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/stringSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/commandlineProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astDiagnostics \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/astQuery \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/binaryAnalyses \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/midend/programAnalysis \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/roseSupport \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     -I$(top_srcdir)/src/util/graphs \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) -DBOOST_REGEX_MATCH_EXTRA 


# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph 
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer 
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they 
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently 
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)
ROSE_LIBS = $(top_builddir)/src/librose.la -lm  $(JAVA_JVM_LINK) \
  $(SQLITE_DATABASE_LIBS) $(QT_LIBS)  $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(SQLITE3_LDFLAGS)  $(RT_LIBS) \
  $(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
  $(ROSE_GUI_LIBS_WITH_PATH) $(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
  $(ROSE_INTEL_COMPILER_MATH_LIBS)


# DQ (3/13/2009): Removed this from ROSE_LIBS because libtool warnings say it should be in AM_LDFLAGS
# (this is because it has been moved from being linked statically to being linked dynamically).
# $(ROSE_DWARF_LIBS_WITH_PATH)
# AM_LDFLAGS = $(ROSE_DWARF_LIBS_WITH_PATH)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext
# DQ (3/14/2009): Need to add rpath to LDFLAGS instead of LDADD (to follow libtool rules).
# LDFLAGS += $(ROSE_DWARF_LIBS_WITH_PATH)

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)
#   $(LIB_QT) $(JAVA_JVM_LIB) 

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS 

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly 
# with make distcheck rule 
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Location of sample binary files (executables, libraries, etc) that serve as input to
# some of the binary analysis tests.
BINARY_SAMPLES = $(top_srcdir)/binaries/samples

# Test harness variables. See "rth_run.pl --help" for more info.
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl \
	srcdir=$(srcdir) top_srcdir=$(top_srcdir) \
	VALGRIND=$(VALGRIND) BINARY_SAMPLES=$(BINARY_SAMPLES)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl
AUTOMAKE_OPTIONS = subdir-objects
fSageSupport_la_sources = \
	$(fSageSupportPath)/sage_support.cpp \
	$(fSageSupportPath)/cmdline.cpp

fSageSupport_includeHeaders = \
	$(fSageSupportPath)/sage_support.h \
	$(fSageSupportPath)/cmdline.h


#
# Don't use $(srcdir) in conjunction with [subdir-objects], otherwise
# object files will be built in the source tree. Therefore, we need to
# use relative paths.
#
#mptPartialRedundancyEliminationPath=$(srcdir)/partialRedundancyElimination#
fSageSupportPath = sage_support#

# DQ (12/29/2009): This is only used to handle generated code as smaller files.
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@SUBDIRS = astFileIO \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astMerge \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	virtualCFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astTokenStream \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astHiddenTypeAndDeclarationLists \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astFromString \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	GENERATED_CODE_DIRECTORY_Cxx_Grammar

# DQ (6/25/2011): Readded this directory so that we can support the older behavior as a default
# although this will likely fail at least some of the nearly one hundred new name qualification tests.
# DQ (6/22/2011): I think that the astHiddenTypeAndDeclarationLists directory is no longer required in ROSE.
# SUBDIRS = astFileIO astMerge astFixup astPostProcessing sageInterface virtualCFG astTokenStream astHiddenTypeAndDeclarationLists astVisualization astFromString
# SUBDIRS = astFileIO astMerge astFixup astPostProcessing sageInterface virtualCFG astTokenStream astVisualization astFromString
# SUBDIRS = astFileIO astMerge astFixup astPostProcessing sageInterface virtualCFG astTokenStream astHiddenTypeAndDeclarationLists astVisualization astFromString includeDirectivesProcessing

# DQ (12/29/2009): This is only used to handle generated code as smaller files.
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@SUBDIRS = astFixup \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	astPostProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	sageInterface \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	astVisualization \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	virtualCFG \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	includeDirectivesProcessing \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	GENERATED_CODE_DIRECTORY_Cxx_Grammar

# DQ (5/2/2009): This supports the optimization of the new 
# Graph IR nodes (makes about 25% improvement, I think).
# ROSE_OPTIMIZATION_LEVEL = -O3
ROSE_OPTIMIZATION_LEVEL = 
# ROSE_VERBOSE = -rose:verbose 2

# Liao, 3/31/2009, moved the OpenMP parser here
#Liao, 10/27/2008. I decide to parse OpenMP pragma string here
# Bison flags
AM_YFLAGS = -d
# Flex flags
AM_LFLAGS = 

# INCLUDES = $(ROSE_INCLUDES)
# INCLUDES = $(ROSE_INCLUDES) -I$(top_srcdir)/src/frontend/EDG_SAGE_Connection -I$(top_srcdir)/src/frontend/EDG/EDG_3.3/src $(WAVE_INCLUDES)
# INCLUDES = $(ROSE_INCLUDES) -I$(top_srcdir)/src/frontend/EDG_SAGE_Connection -I$(top_srcdir)/src/frontend/EDG/EDG_3.3/src
# JJW 6-2-2008: We shouldn't be using anything from EDG outside these two directories
# INCLUDES = $(ROSE_INCLUDES) # -I$(top_srcdir)/src/frontend/EDG_SAGE_Connection -I$(top_srcdir)/src/frontend/EDG/EDG_3.3/src
INCLUDES = $(ROSE_INCLUDES) $(am__append_1)

# Copy the original lex file and the C++ file generated from it to the distribution
# so that users don't have to find an appropriate version of lex (flex).  Flex should
# be used by developers so that ANSI C code is generated for g++.  This is something
# for developers to worry about in the generation of sufficently portable distributions.
# EXTRA_DIST = preproc.lex preproc.C sageClasses.docs sage.docs.in docs
# EXTRA_DIST = preproc.lex preproc.C astGraphTemplate.C docs
# EXTRA_DIST = preproc.ll docs rtiHelpers.h attributeListMap.h

# DQ (9/29/2009): Renamed preproc.ll to preproc-c.ll in SVN.
# This will hopefull avoid a linking problem where multiple files
# are called preproc.o (from here and from EDG).
EXTRA_DIST = CMakeLists.txt preproc-c.ll docs rtiHelpers.h attributeListMap.h \
             advanced_preprocessing_hooks.h rose_attributes_list.h dwarfSupport.h \
             omplexer.cc ompparser.cc ompparser.h sage3basic.hhh fileoffsetbits.h rosedll.h \
	     ompAstConstruction.h PolicyControl.txt

CLEANFILES = haveRosettaGeneratedSource
DISTCLEANFILES = preproc-c.cc ompparser.cc ompparser.h omplexer.cc
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@GENERATED_SOURCE = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_Grammar.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_Grammar.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarRTI.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarMemoryPoolSupport.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	AstQueryMemoryPool.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarReturnClassHierarchySubTree.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarTreeTraversalSuccessorContainer.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarTreeTraversalAccessEnums.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarVariantEnumNames.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarNewAndDeleteOperators.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarCopyMemberFunctions.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarTraverseMemoryPool.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarCheckingIfDataMembersAreInMemoryPool.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarMemoryPoolSupport.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	AST_FILE_IO.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	AST_FILE_IO.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	StorageClasses.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	StorageClasses.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarReturnDataMemberPointers.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarProcessDataMemberReferenceToPointers.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarNewConstructors.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	Cxx_GrammarGetChildIndex.C


# Some source code is generated (call make in ROSE/src/ROSETTA/src to generate these files)
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@GENERATED_SOURCE = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_Grammar.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_Grammar.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarMemoryPoolSupport.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	AstQueryMemoryPool.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarReturnClassHierarchySubTree.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarTreeTraversalSuccessorContainer.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarTreeTraversalAccessEnums.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarVariantEnumNames.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarNewAndDeleteOperators.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarCopyMemberFunctions.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarTraverseMemoryPool.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarCheckingIfDataMembersAreInMemoryPool.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarMemoryPoolSupport.h \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarReturnDataMemberPointers.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarProcessDataMemberReferenceToPointers.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarNewConstructors.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	Cxx_GrammarGetChildIndex.C

@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@libsage3Sources = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   rose_attributes_list.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   attachPreprocessingInfo.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   attachPreprocessingInfoTraversal.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   attributeListMap.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   manglingSupport.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   fixupCopy_scopes.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   fixupCopy_symbols.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   fixupCopy_references.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   rtiHelpers.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   OmpAttribute.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   ompFortranParser.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   ompAstConstruction.cpp \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   dwarfSupport.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   rose_graph_support.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@   $(fSageSupport_la_sources)

@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@libsage3Sources = \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   rose_attributes_list.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   attachPreprocessingInfo.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   attachPreprocessingInfoTraversal.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   attributeListMap.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   manglingSupport.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   fixupCopy_scopes.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   fixupCopy_symbols.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   fixupCopy_references.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   rose_graph_support.C \
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@   $(fSageSupport_la_sources)


# DQ (2/15/2010): This fails in Hudson tests of ROSE compiling ROSE for code generation, but I can't 
# get it to fail in my own tests.  Skip it for now and see if there are more of these cases.
# attachPreprocessingInfo.C
# if !ROSE_USING_ROSE_CODE_GENERATION
#    libsage3Sources += attachPreprocessingInfo.C
# endif

# $(GENERATED_SOURCE) is handled separately

# DQ (5/27/2007): Files moved or removed
#   generateAST.C
#   AstAttributeDOT.C
#   astGraph.C
#   insert.C
#   stripWrapper.C
#   grammarBaseClass.C

# DQ (12/16/2008): Removed as part of rewrite of CPP and comment handling.
#   attach_all_info.C 
noinst_LTLIBRARIES = libsage3.la
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@libsage3_la_SOURCES = $(libsage3Sources) preproc-c.ll omplexer.ll ompparser.yy

# libsage3_la_SOURCES = $(libsage3Sources) preproc.ll rose_paths.h omplexer.ll ompparser.yy
# libsage3_la_SOURCES = $(libsage3Sources) preproc.ll omplexer.ll ompparser.yy
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@libsage3_la_SOURCES = $(libsage3Sources) preproc-c.ll

# DQ (3/8/2009): I think that the dependence upon $(top_builddir)/rose_config.h 
# is what was forcing a lot of files to be compiled after reruning configure.
# nodist_libsage3_la_SOURCES = $(GENERATED_SOURCE) $(top_builddir)/rose_config.h
nodist_libsage3_la_SOURCES = $(GENERATED_SOURCE)
@ROSE_USE_BOOST_WAVE_FALSE@libsage3_la_LIBADD =  \
@ROSE_USE_BOOST_WAVE_FALSE@	astFixup/libastFixup.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astPostProcessing/libastPostProcessing.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astMerge/libastMerge.la \
@ROSE_USE_BOOST_WAVE_FALSE@	sageInterface/libsageInterface.la \
@ROSE_USE_BOOST_WAVE_FALSE@	virtualCFG/libvirtualCFG.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astVisualization/libastVisualization.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astFromString/libAstFromString.la \
@ROSE_USE_BOOST_WAVE_FALSE@	astHiddenTypeAndDeclarationLists/libastHiddenTypeAndDeclarationLists.la \
@ROSE_USE_BOOST_WAVE_FALSE@	includeDirectivesProcessing/libincludeDirectivesProcessing.la \
@ROSE_USE_BOOST_WAVE_FALSE@	$(am__append_2)
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@libsage3_la_LIBADD = astFixup/libastFixup.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astPostProcessing/libastPostProcessing.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astMerge/libastMerge.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	sageInterface/libsageInterface.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astTokenStream/libastTokenStream.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	virtualCFG/libvirtualCFG.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astVisualization/libastVisualization.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astFromString/libAstFromString.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	astHiddenTypeAndDeclarationLists/libastHiddenTypeAndDeclarationLists.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	includeDirectivesProcessing/libincludeDirectivesProcessing.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@	$(am__append_2)
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@libsage3_la_LIBADD = astFixup/libastFixup.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	astPostProcessing/libastPostProcessing.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	sageInterface/libsageInterface.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	astVisualization/libastVisualization.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	virtualCFG/libvirtualCFG.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	includeDirectivesProcessing/libincludeDirectivesProcessing.la \
@ROSE_USE_BOOST_WAVE_TRUE@@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@	$(am__append_2)

# DQ (10/18/2007): Added AST_FILE_IO.h StorageClasses.h
# Removed sla.h (redundant with location in src/util/commandlineProcessing/sla.h)
include_HEADERS = \
   sage3.h sage3basic.h rose_attributes_list.h \
   attachPreprocessingInfo.h \
   attachPreprocessingInfoTraversal.h \
   attach_all_info.h manglingSupport.h C++_include_files.h \
   fixupCopy.h \
   general_token_defs.h rtiHelpers.h \
   OmpAttribute.h omp.h dwarfSupport.h \
   omp_lib_kinds.h omp_lib.h sage3basic.hhh rosedefs.h  fileoffsetbits.h rosedll.h \
   $(fSageSupport_includeHeaders)


# DQ (4/5/2009): Moved rose_paths.h to src/util (where the source file is located).
nodist_include_HEADERS = \
   Cxx_Grammar.h \
   Cxx_GrammarMemoryPoolSupport.h \
   Cxx_GrammarTreeTraversalAccessEnums.h \
   AST_FILE_IO.h StorageClasses.h \
   AstQueryMemoryPool.h \
   astFileIO/AstSpecificDataManagingClass.h

@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_FALSE@BUILT_SOURCES = $(GENERATED_SOURCE) ompparser.cc ompparser.h omplexer.cc
@ROSE_USE_INTERNAL_FRONTEND_DEVELOPMENT_TRUE@BUILT_SOURCES = $(GENERATED_SOURCE)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .C .cc .cpp .ll .lo .o .obj .yy
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(srcdir)/sage_support/Makefile_variables $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps src/frontend/SageIII/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps src/frontend/SageIII/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(srcdir)/sage_support/Makefile_variables:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
sage.docs: $(top_builddir)/config.status $(srcdir)/sage.docs.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
$(fSageSupportPath)/$(am__dirstamp):
	@$(MKDIR_P) $(fSageSupportPath)
	@: > $(fSageSupportPath)/$(am__dirstamp)
$(fSageSupportPath)/sage_support.lo:  \
	$(fSageSupportPath)/$(am__dirstamp)
$(fSageSupportPath)/cmdline.lo: $(fSageSupportPath)/$(am__dirstamp)
ompparser.hh: ompparser.cc
	@if test ! -f $@; then rm -f ompparser.cc; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) ompparser.cc; else :; fi

libsage3.la: $(libsage3_la_OBJECTS) $(libsage3_la_DEPENDENCIES) $(EXTRA_libsage3_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libsage3_la_OBJECTS) $(libsage3_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f $(fSageSupportPath)/*.$(OBJEXT)
	-rm -f $(fSageSupportPath)/*.lo

distclean-compile:
	-rm -f *.tab.c

.C.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

.ll.cc:
	$(AM_V_LEX)$(am__skiplex) $(SHELL) $(YLWRAP) $< $(LEX_OUTPUT_ROOT).c $@ -- $(LEXCOMPILE)

.yy.cc:
	$(AM_V_YACC)$(am__skipyacc) $(SHELL) $(YLWRAP) $< y.tab.c $@ y.tab.h `echo $@ | $(am__yacc_c2h)` y.output $*.output -- $(YACCCOMPILE)

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf $(fSageSupportPath)/.libs $(fSageSupportPath)/_libs
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
	-test -z "$(fSageSupportPath)/$(am__dirstamp)" || rm -f $(fSageSupportPath)/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f omplexer.cc
	-rm -f ompparser.cc
	-rm -f ompparser.hh
	-rm -f preproc-c.cc
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-local distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS install-nodist_includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-nodist_includeHEADERS

.MAKE: $(am__recursive_targets) all check install install-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	check check-am clean clean-generic clean-libtool clean-local \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-local distclean-tags distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-includeHEADERS \
	install-info install-info-am install-man \
	install-nodist_includeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-nodist_includeHEADERS


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@export ROSE_IN_BUILD_TREE=$(top_builddir)

# DQ (3/13/2010):
#
# Extract the required OFP source files needed for ROSE Fortran support (in sage_support/sage_support.cpp).
# if ROSE_USE_OPEN_FORTRAN_PARSER
#
@ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE@$(fSageSupportPath)/sage_support.cpp: extract_rose_required_ofp_source_files

# DQ (10/9/2010): We are now trying to properly represent the dependences so avoid redundant
# extraction of the OFP source files used within ROSE. Using token.c as a representative file.
extract_rose_required_ofp_source_files:
@ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE@	cd ${top_builddir}/src/3rdPartyLibraries/fortran-parser; $(MAKE) extract_rose_required_ofp_source_files
@ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE@	cd ${top_builddir}/src/3rdPartyLibraries/java-parser; $(MAKE) extract_rose_required_ecj_source_files

# DQ (11/14/2011): Add debug support when doing selective frontend development.
# This cause the link time to incread about 4X.
# CXXFLAGS += -g

# omplexer.cc needs a header generaetd from ompparser.yy
omplexer.lo: ompparser.h omplexer.cc
ompparser.h: ompparser.cc
	if test -f ompparser.hh; then $(LN_S) ompparser.hh ompparser.h; fi;

# Force sage.docs to be make by default 
# (if sage.docs.in is modified)
all-local: roseh sage.docs 

# DQ (4/23/2009): This file depends upon other files
StorageClasses.lo: $(srcdir)/astFileIO/StorageClassMemoryManagement.C astFileIO/SourcesOfIRNodesAstFileIOSupport.C

haveRosettaGeneratedSource:
	cd $(top_builddir)/src/ROSETTA/src; $(MAKE)
	touch haveRosettaGeneratedSource

force-haveRosettaGeneratedSource:
	-rm Cxx_Grammar.h
	$(MAKE) haveRosettaGeneratedSource

$(GENERATED_SOURCE): haveRosettaGeneratedSource

rose_attributes_list.lo : rose_attributes_list.h 

# TPS (11Feb2009): PCH only works when multithreading is off.
# We should not use PCH and MPI together.
@ROSE_MPI_TRUE@@ROSE_PCH_TRUE@roseh:

# DQ (2/11/2009): This is part of the support for Precompiled Headers (PCH) using GNU g++
@ROSE_MPI_FALSE@@ROSE_PCH_TRUE@roseh:
#	DQ (2/10/2009): Rush for the off switch on precompiled header files, comment out to skip use of PCH.
#       TPS (23 Feb 2009): Hardcoded -fpic and -DPIC for now because 
#       for some reason it is used by most files although not specified on configure
@ROSE_MPI_FALSE@@ROSE_PCH_TRUE@	@echo "  COMPILE sage3basic.h.gch"
@ROSE_MPI_FALSE@@ROSE_PCH_TRUE@	@$(CXX)  -fPIC -DPIC $(CXXFLAGS) $(CFLAGS) $(CPPFLAGS) -g -o sage3basic.h.gch $(top_srcdir)/src/frontend/SageIII/sage3basic.h -I$(top_builddir) $(ROSE_INCLUDES) 
# default, do nothing.
@ROSE_PCH_FALSE@roseh:

test_roseh: roseh

# DQ (9/9/2007): Put C++_include_files.h back into place
# since it is a convinient mechanism to handle included headers 
# in the Cxx_Grammar.C file (a ROSETTA generated file).
# DQ (5/27/2007): Files moved or removed
# grammarBaseClass.h 
# AstAttributeDOT.h
# astGraph.h
# astGraphTemplate.C
# C++_include_files.h

clean-local:
	rm -rf Templates.DB ii_files ti_files cxx_templates
	rm -rf Cxx_Grammar* AST_FILE_IO.C StorageClasses.C
	rm -rf AST_FILE_IO.h StorageClasses.h AstQueryMemoryPool.h
	rm -rf generated_abstractcppgrammar.atg
	rm -f sage3basic.h.gch
	rm -f *.binary

distclean-local:
	rm -rf Templates.DB
	rm -f sage3basic.h.gch

removeHashLineDirectivesFromGeneratedCode:
	cp Cxx_Grammar.h  Cxx_Grammar.h.withLineDirectives
	grep -v "#line" Cxx_Grammar.h > Cxx_Grammar.h.withoutLineDirectives
	cp Cxx_Grammar.h.withoutLineDirectives Cxx_Grammar.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
